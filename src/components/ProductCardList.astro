---
import { Image, inferRemoteSize } from "astro:assets";

const { titulo, caracteristica, iconoCaracteristica, imagen, descripcion, buttonHref, categoryColor } = Astro.props;

// Verificar si la imagen existe antes de intentar obtener dimensiones
let width = 300, height = 300;
if (imagen) {
  try {
    const dimensions = await inferRemoteSize(imagen);
    width = dimensions.width;
    height = dimensions.height;
  } catch (error) {
    console.error('Error getting image dimensions:', error);
  }
}

// Determinar el color del triángulo, se obtiene de la relacion entre producto y su categoría, obtener el color de la categoría a la que pertenece el producto
const triangleClass = `absolute bottom-0 left-0 px-6 py-4 z-10 flex items-center justify-center min-w-[140px]`;
const triangleStyle = `background-color: ${categoryColor}; opacity: 0.9; clip-path: polygon(0 0, calc(100% - 20px) 0, 100% 50%, calc(100% - 20px) 100%, 0 100%);`;
---

  <div class="flex flex-col md:flex-row items-center md:items-stretch bg-[#E5E5E5] shadow-md font-fuenteprincipal relative">
   
    <div class="flex-shrink-0 flex items-center justify-center w-full md:w-auto p-5 relative">
       <!-- Triángulo con transparencia y título -->
        <div class={triangleClass}
          style={triangleStyle}>
          <div class="text-center px-2">
            <span class="text-white text-lg md:text-xl font-light block">Linea</span>
            <span class="text-white text-2xl md:text-xl lg:text-2xl font-bold leading-tight">{titulo || 'Sin título'}</span>
          </div>
        </div>
      <div class="w-full md:w-48 xl:w-60 flex items-center justify-center relative">
        {imagen ? (
          <Image 
            src={imagen} 
            alt={`Imagen de ${titulo || 'Producto'}`}
            width={width}
            height={height}
            format="webp"
            class="w-full h-full object-contain z-0" 
          />
        ) : (
          <div class="w-full h-48 bg-gray-200 flex items-center justify-center">
            <span class="text-gray-500">Sin imagen</span>
          </div>
        )}
      </div>
    </div>
    <!-- Info --> 
    <div class="flex flex-col justify-center p-4 md:p-8 flex-1">
      <div class="flex items-center mb-2">
        <span class="w-10 h-10 bg-azulprimario rounded-md flex items-center justify-center mr-3">
          <!-- Icono de badge/caracteristica, aqui va el icono svg de la caracterisica que se fetchea del producto -->
          {iconoCaracteristica ? (
            <Fragment set:html={iconoCaracteristica} />
          ) : (
            <div class="w-6 h-6 bg-white rounded"></div>
          )}
        </span>
        <span class="text-xl font-semibold text-azulprimario">{caracteristica || 'Sin característica'}</span>
      </div>
      <p class="text-azulsecundario font-regular mb-6">{descripcion || 'Sin descripción'}</p>
      <a
        href={buttonHref || '#'}
        class="inline-flex items-center bg-azulprimario text-white text-lg lg:text-lg xl:text-xl  px-8 py-4 w-60 lg:w-40 xl:w-60 hover:bg-blue-700 transition"
      >
        Ver Producto
        <svg class="inline-flex ml-3 w-6 h-6 fill-white" viewBox="0 0 20 11">
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M0.628662 5.5C0.628662 5.16249 0.925718 4.88889 1.29215 4.88889H16.9411L12.7659 1.04323C12.5067 0.80458 12.5067 0.417645 12.7659 0.178991C13.0249 -0.0596635 13.4451 -0.0596635 13.7041 0.178991L19.0121 5.06788C19.2712 5.30653 19.2712 5.69347 19.0121 5.93212L13.7041 10.821C13.4451 11.0597 13.0249 11.0597 12.7659 10.821C12.5067 10.5824 12.5067 10.1954 12.7659 9.9568L16.9411 6.11111H1.29215C0.925718 6.11111 0.628662 5.83751 0.628662 5.5Z"
          ></path>
        </svg>
      </a>
    </div>
  </div>
