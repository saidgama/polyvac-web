---
import { Image } from "astro:assets";
import logo from "../assets/header/logo3.png";
import { getCategorias } from "../lib/strapi.js";

const url = new URL(Astro.request.url);
const currentPath = url.pathname;

// Obtener categorías desde Strapi
let categorias = [];
try {
  const response = await getCategorias();
  categorias = response.data || [];
} catch (error) {
  console.error('Error obteniendo categorías:', error);
}
---

<nav class="bg-white sticky w-full z-20 top-0 start-0 font-fuenteprincipal shadow-sm border-b border-gray-100">
  <div
    class="flex flex-wrap items-center justify-between mx-auto p-4 md:px-[3%]"
  >
    <a href="/" class="flex items-center space-x-3">
      <Image src={logo} alt="Polyvac Logo" class="h-10 md:h-12 w-auto" />
    </a>
    <div class="hidden lg:flex items-center space-x-2 ml-[3%]">
      <a href="https://www.facebook.com/p/Industrias-Polyvac-100042747596287/">
        <svg class="w-5 h-5 fill-gris" viewBox="0 0 10 18">
          <path
            d="M9.34469 10.125L9.86325 6.86742H6.62096V4.75348C6.62096 3.86227 7.07388 2.99355 8.526 2.99355H10V0.220078C10 0.220078 8.66239 0 7.38349 0C4.71337 0 2.96806 1.56023 2.96806 4.38469V6.86742H0V10.125H2.96806V18H6.62096V10.125H9.34469Z"
          ></path>
        </svg>
      </a>
    </div>
    <div
      class="hidden lg:inline-flex h-auto w-0.5 self-stretch bg-neutral-100 mx-[1.2%]"
    >
    </div>

    <div class="flex md:order-2 space-x-3">
      <div class="hidden md:flex items-center">
        <button id="search-toggle" type="button" class="p-2 rounded-lg hover:bg-gray-100 transition-colors">
          <svg class="w-7 h-7 fill-gris" viewBox="0 0 26 26">
            <path
              d="M23.9778 26L14.8778 16.9C14.1556 17.4778 13.325 17.9352 12.3861 18.2722C11.4472 18.6093 10.4481 18.7778 9.38889 18.7778C6.76481 18.7778 4.54398 17.869 2.72639 16.0514C0.908796 14.2338 0 12.013 0 9.38889C0 6.76481 0.908796 4.54398 2.72639 2.72639C4.54398 0.908796 6.76481 0 9.38889 0C12.013 0 14.2338 0.908796 16.0514 2.72639C17.869 4.54398 18.7778 6.76481 18.7778 9.38889C18.7778 10.4481 18.6093 11.4472 18.2722 12.3861C17.9352 13.325 17.4778 14.1556 16.9 14.8778L26 23.9778L23.9778 26ZM9.38889 15.8889C11.1944 15.8889 12.7292 15.2569 13.9931 13.9931C15.2569 12.7292 15.8889 11.1944 15.8889 9.38889C15.8889 7.58333 15.2569 6.04861 13.9931 4.78472C12.7292 3.52083 11.1944 2.88889 9.38889 2.88889C7.58333 2.88889 6.04861 3.52083 4.78472 4.78472C3.52083 6.04861 2.88889 7.58333 2.88889 9.38889C2.88889 11.1944 3.52083 12.7292 4.78472 13.9931C6.04861 15.2569 7.58333 15.8889 9.38889 15.8889Z"
            ></path>
          </svg>
        </button>
      </div>
     
      <a
        href="/cotizador"
        class="relative inline-flex items-center ml-1 md:ml-3 lg:ml-6 text-sm text-center text-white"
        id="cart-link"
      >
        <svg
          id="cart-icon"
          class="w-8 h-8 md:w-10 md:h-10 fill-gris hover:fill-azulprimario transition-all duration-300"
          viewBox="0 0 33 36"
        >
          <path
            d="M5.375 35.8333C3.88194 35.8333 2.61285 35.3108 1.56771 34.2656C0.522569 33.2205 0 31.9514 0 30.4583V25.0833H5.375V0L8.0625 2.6875L10.75 0L13.4375 2.6875L16.125 0L18.8125 2.6875L21.5 0L24.1875 2.6875L26.875 0L29.5625 2.6875L32.25 0V30.4583C32.25 31.9514 31.7274 33.2205 30.6823 34.2656C29.6372 35.3108 28.3681 35.8333 26.875 35.8333H5.375ZM26.875 32.25C27.3826 32.25 27.8082 32.0783 28.1516 31.7349C28.495 31.3915 28.6667 30.966 28.6667 30.4583V5.375H8.95833V25.0833H25.0833V30.4583C25.0833 30.966 25.255 31.3915 25.5984 31.7349C25.9418 32.0783 26.3674 32.25 26.875 32.25ZM10.75 12.5417V8.95833H21.5V12.5417H10.75ZM10.75 17.9167V14.3333H21.5V17.9167H10.75ZM25.0833 12.5417C24.5757 12.5417 24.1502 12.37 23.8068 12.0266C23.4634 11.6832 23.2917 11.2576 23.2917 10.75C23.2917 10.2424 23.4634 9.81684 23.8068 9.47344C24.1502 9.13003 24.5757 8.95833 25.0833 8.95833C25.591 8.95833 26.0165 9.13003 26.3599 9.47344C26.7033 9.81684 26.875 10.2424 26.875 10.75C26.875 11.2576 26.7033 11.6832 26.3599 12.0266C26.0165 12.37 25.591 12.5417 25.0833 12.5417ZM25.0833 17.9167C24.5757 17.9167 24.1502 17.745 23.8068 17.4016C23.4634 17.0582 23.2917 16.6326 23.2917 16.125C23.2917 15.6174 23.4634 15.1918 23.8068 14.8484C24.1502 14.505 24.5757 14.3333 25.0833 14.3333C25.591 14.3333 26.0165 14.505 26.3599 14.8484C26.7033 15.1918 26.875 15.6174 26.875 16.125C26.875 16.6326 26.7033 17.0582 26.3599 17.4016C26.0165 17.745 25.591 17.9167 25.0833 17.9167ZM5.375 32.25H21.5V28.6667H3.58333V30.4583C3.58333 30.966 3.75503 31.3915 4.09844 31.7349C4.44184 32.0783 4.86736 32.25 5.375 32.25Z"
          ></path>
        </svg>
        <div
          class="absolute inline-flex items-center justify-center w-5 h-5 md:w-6 md:h-6 text-xs font-base text-white bg-azulprimario rounded-full -top-1 md:-top-2 -end-3 transition-all duration-300"
          data-cart-counter
          id="cart-counter"
          style="display: none;"
        >
          0
        </div>
      </a>
      <h1
        class="hidden lg:inline-flex items-center font-bold text-lg text-gris"
      >
        Cotizador
      </h1>
      <button
        id="menu-toggle"
        type="button"
        class="md:hidden flex ml-3 items-center gap-2 px-4 py-2 text-sm font-medium text-white bg-azulprimario hover:bg-blue-700 active:bg-blue-800 focus:outline-none transition-all duration-300"
      >
        <svg class="w-5 h-5 transition-transform duration-300" fill="none" viewBox="0 0 17 14" id="menu-icon">
          <path
            stroke="currentColor"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M1 1h15M1 7h15M1 13h15"></path>
        </svg>
        <span class="font-medium">Menú</span>
      </button>
    </div>

    <div
      class="md:ml-[3%] lg:ml-0 items-center md:flex-grow justify-between hidden w-full md:flex md:w-auto md:order-1"
      id="navbar-sticky"
    >
      <div class="relative mt-3 md:hidden">
        <div
          class="absolute inset-y-0 start-0 flex items-center ps-3 pointer-events-none"
        >
          <svg class="w-4 h-4 fill-gris" viewBox="0 0 26 26">
            <path
              d="M23.9778 26L14.8778 16.9C14.1556 17.4778 13.325 17.9352 12.3861 18.2722C11.4472 18.6093 10.4481 18.7778 9.38889 18.7778C6.76481 18.7778 4.54398 17.869 2.72639 16.0514C0.908796 14.2338 0 12.013 0 9.38889C0 6.76481 0.908796 4.54398 2.72639 2.72639C4.54398 0.908796 6.76481 0 9.38889 0C12.013 0 14.2338 0.908796 16.0514 2.72639C17.869 4.54398 18.7778 6.76481 18.7778 9.38889C18.7778 10.4481 18.6093 11.4472 18.2722 12.3861C17.9352 13.325 17.4778 14.1556 16.9 14.8778L26 23.9778L23.9778 26ZM9.38889 15.8889C11.1944 15.8889 12.7292 15.2569 13.9931 13.9931C15.2569 12.7292 15.8889 11.1944 15.8889 9.38889C15.8889 7.58333 15.2569 6.04861 13.9931 4.78472C12.7292 3.52083 11.1944 2.88889 9.38889 2.88889C7.58333 2.88889 6.04861 3.52083 4.78472 4.78472C3.52083 6.04861 2.88889 7.58333 2.88889 9.38889C2.88889 11.1944 3.52083 12.7292 4.78472 13.9931C6.04861 15.2569 7.58333 15.8889 9.38889 15.8889Z"
            ></path>
          </svg>
        </div>
        <form id="mobile-search-form">
          <input
            type="text"
            id="mobile-search-input"
            class="block w-full p-2 ps-10 font-bold text-sm text-gray-900 bg-[#efefef] rounded-lg"
            placeholder="Buscador..."
          />
        </form>
      </div>
      <ul
        class="flex flex-col md:p-0 mt-4 bg-white md:bg-white font-bold md:space-x-4 lg:space-x-8 md:flex-row md:mt-0 md:border-0 border-t border-gray-200 md:border-t-0 shadow-lg md:shadow-none"
      >
        <li class="border-b border-gray-100 md:border-b-0">
          <a
            href="/"
            class="group relative block py-4 px-6 md:py-2 md:px-0 lg:px-1 xl:px-3 transition-all hover:bg-gray-50 md:hover:bg-transparent"
            class:list={{
              "text-azulprimario bg-blue-50 md:bg-transparent": currentPath === "/",
              "text-gray-700 md:text-gris": currentPath !== "/",
            }}
          >
            <span
              class="absolute inset-x-0 top-0 h-0.5 bg-azulprimario transition-transform duration-300 transform scale-x-0 group-hover:scale-x-100 hidden md:block"
              class:list={{ "scale-x-100": currentPath === "/" }}
            >
            </span>
            <span
              class="absolute left-0 top-0 bottom-0 w-1 bg-azulprimario transition-all duration-300 md:hidden"
              class:list={{ "opacity-100": currentPath === "/", "opacity-0": currentPath !== "/" }}
            >
            </span>
            Inicio
          </a>
        </li>
        <li class="border-b border-gray-100 md:border-b-0">
          <a
            href="/acerca"
            class="group relative block py-4 px-6 md:py-2 md:px-0 lg:px-1 xl:px-3 transition-all hover:bg-gray-50 md:hover:bg-transparent"
            class:list={{
              "text-azulprimario bg-blue-50 md:bg-transparent": currentPath === "/acerca",
              "text-gray-700 md:text-gris": currentPath !== "/acerca",
            }}
          >
            <span
              class="absolute inset-x-0 top-0 h-0.5 bg-azulprimario transition-transform duration-300 transform scale-x-0 group-hover:scale-x-100 hidden md:block"
              class:list={{ "scale-x-100": currentPath === "/acerca" }}
            >
            </span>
            <span
              class="absolute left-0 top-0 bottom-0 w-1 bg-azulprimario transition-all duration-300 md:hidden"
              class:list={{ "opacity-100": currentPath === "/acerca", "opacity-0": currentPath !== "/acerca" }}
            >
            </span>
            Acerca de Nosotros
          </a>
        </li>
        
        <!-- Dropdown de Categorías -->
        <li class="border-b border-gray-100 md:border-b-0 relative">
          <button
            id="categories-dropdown-button"
            class="group relative flex items-center w-full py-4 px-6 md:py-2 md:px-0 lg:px-1 xl:px-3 transition-all hover:bg-gray-50 md:hover:bg-transparent text-gray-700 md:text-gris"
          >
            <span
              class="absolute inset-x-0 top-0 h-0.5 bg-azulprimario transition-transform duration-300 transform scale-x-0 group-hover:scale-x-100 hidden md:block"
            >
            </span>
            <span class="mr-2">Categorías</span>
            <svg 
              class="w-4 h-4 transition-transform duration-300" 
              id="categories-dropdown-icon"
              fill="none" 
              stroke="currentColor" 
              viewBox="0 0 24 24"
            >
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
            </svg>
          </button>
          
          <!-- Dropdown Menu -->
          <div
            id="categories-dropdown-menu"
            class="hidden absolute left-0 md:left-auto md:right-0 top-full mt-1 w-64 bg-white rounded-lg shadow-lg border border-gray-200 py-2 z-50"
          >
            {categorias.length > 0 ? (
              categorias.map((categoria) => (
                <a
                  href={`/categoria/${categoria.slug}`}
                  class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-50 hover:text-azulprimario transition-colors"
                >
                  {categoria.nombre}
                </a>
              ))
            ) : (
              <div class="px-4 py-2 text-sm text-gray-500">
                No hay categorías disponibles
              </div>
            )}
          </div>
        </li>
        
        <li class="border-b border-gray-100 md:border-b-0">
          <a
            href="/contacto"
            class="group relative block py-4 px-6 md:py-2 md:px-0 lg:px-1 xl:px-3 transition-all hover:bg-gray-50 md:hover:bg-transparent"
            class:list={{
              "text-azulprimario bg-blue-50 md:bg-transparent": currentPath === "/contacto",
              "text-gray-700 md:text-gris": currentPath !== "/contacto",
            }}
          >
            <span
              class="absolute inset-x-0 top-0 h-0.5 bg-azulprimario transition-transform duration-300 transform scale-x-0 group-hover:scale-x-100 hidden md:block"
              class:list={{ "scale-x-100": currentPath === "/contacto" }}
            >
            </span>
            <span
              class="absolute left-0 top-0 bottom-0 w-1 bg-azulprimario transition-all duration-300 md:hidden"
              class:list={{ "opacity-100": currentPath === "/contacto", "opacity-0": currentPath !== "/contacto" }}
            >
            </span>
            Contacto
          </a>
        </li>
        <li class="border-b border-gray-100 md:border-b-0">
          <a
            href="/cuenta"
            class="group relative block py-4 px-6 md:py-2 md:px-0 lg:px-1 xl:px-3 transition-all hover:bg-gray-50 md:hover:bg-transparent"
            class:list={{
              "text-azulprimario bg-blue-50 md:bg-transparent": currentPath === "/cuenta",
              "text-gray-700 md:text-gris": currentPath !== "/cuenta",
            }}
          >
            <span
              class="absolute inset-x-0 top-0 h-0.5 bg-azulprimario transition-transform duration-300 transform scale-x-0 group-hover:scale-x-100 hidden md:block"
              class:list={{ "scale-x-100": currentPath === "/cuenta" }}
            >
            </span>
            <span
              class="absolute left-0 top-0 bottom-0 w-1 bg-azulprimario transition-all duration-300 md:hidden"
              class:list={{ "opacity-100": currentPath === "/cuenta", "opacity-0": currentPath !== "/cuenta" }}
            >
            </span>
            Cuenta
          </a>
        </li>
      </ul>
    </div>
  </div>
</nav>

<!-- Barra de búsqueda desplegable -->
<div id="search-bar" class="hidden bg-white border-b border-gray-200 shadow-sm">
  <div class="container mx-auto px-4 py-4">
    <form id="header-search-form" class="max-w-2xl mx-auto">
      <div class="relative">
        <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
          <svg class="w-5 h-5 text-gray-400" viewBox="0 0 26 26" fill="currentColor">
            <path d="M23.9778 26L14.8778 16.9C14.1556 17.4778 13.325 17.9352 12.3861 18.2722C11.4472 18.6093 10.4481 18.7778 9.38889 18.7778C6.76481 18.7778 4.54398 17.869 2.72639 16.0514C0.908796 14.2338 0 12.013 0 9.38889C0 6.76481 0.908796 4.54398 2.72639 2.72639C4.54398 0.908796 6.76481 0 9.38889 0C12.013 0 14.2338 0.908796 16.0514 2.72639C17.869 4.54398 18.7778 6.76481 18.7778 9.38889C18.7778 10.4481 18.6093 11.4472 18.2722 12.3861C17.9352 13.325 17.4778 14.1556 16.9 14.8778L26 23.9778L23.9778 26ZM9.38889 15.8889C11.1944 15.8889 12.7292 15.2569 13.9931 13.9931C15.2569 12.7292 15.8889 11.1944 15.8889 9.38889C15.8889 7.58333 15.2569 6.04861 13.9931 4.78472C12.7292 3.52083 11.1944 2.88889 9.38889 2.88889C7.58333 2.88889 6.04861 3.52083 4.78472 4.78472C3.52083 6.04861 2.88889 7.58333 2.88889 9.38889C2.88889 11.1944 3.52083 12.7292 4.78472 13.9931C6.04861 15.2569 7.58333 15.8889 9.38889 15.8889Z"></path>
          </svg>
        </div>
        <input 
          type="text" 
          id="header-search-input"
          name="q" 
          placeholder="Buscar productos..." 
          class="w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
          autocomplete="off"
        />
        <button 
          type="button"
          id="search-close"
          class="absolute inset-y-0 right-0 flex items-center pr-3 text-gray-400 hover:text-gray-600"
        >
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
    </form>
  </div>
</div>

<script>
  const button = document.getElementById("menu-toggle");
  const menu = document.getElementById("navbar-sticky");
  const menuIcon = document.getElementById("menu-icon");

  if (button && menu && menuIcon) {
    button.addEventListener("click", () => {
      if (menu) {
        const expanded = menu.classList.contains("hidden");
        menu.classList.toggle("hidden");
        
        // Agregar animación de giro al ícono
        if (expanded) {
          // Menú se está abriendo
          menuIcon.classList.add("rotate-90");
        } else {
          // Menú se está cerrando
          menuIcon.classList.remove("rotate-90");
        }
      }
    });
  }

  // Funcionalidad de búsqueda en el header
  const searchToggle = document.getElementById("search-toggle");
  const searchBar = document.getElementById("search-bar");
  const searchClose = document.getElementById("search-close");
  const headerSearchForm = document.getElementById("header-search-form");
  const headerSearchInput = document.getElementById("header-search-input");
  const mobileSearchForm = document.getElementById("mobile-search-form");
  const mobileSearchInput = document.getElementById("mobile-search-input");

  // Mostrar/ocultar barra de búsqueda
  if (searchToggle && searchBar) {
    searchToggle.addEventListener("click", () => {
      searchBar.classList.toggle("hidden");
      if (!searchBar.classList.contains("hidden")) {
        headerSearchInput?.focus();
      }
    });
  }

  // Cerrar barra de búsqueda
  if (searchClose && searchBar) {
    searchClose.addEventListener("click", () => {
      searchBar.classList.add("hidden");
      if (headerSearchInput) {
        headerSearchInput.value = "";
      }
    });
  }

  // Manejar envío del formulario de búsqueda
  if (headerSearchForm && headerSearchInput) {
    headerSearchForm.addEventListener("submit", (e) => {
      e.preventDefault();
      const query = headerSearchInput.value.trim();
      if (query) {
        // Redirigir a la página de búsqueda con el query
        window.location.href = `/busqueda?q=${encodeURIComponent(query)}`;
      }
    });

    // Búsqueda al presionar Enter
    headerSearchInput.addEventListener("keydown", (e) => {
      if (e.key === "Enter") {
        e.preventDefault();
        const query = headerSearchInput.value.trim();
        if (query) {
          window.location.href = `/busqueda?q=${encodeURIComponent(query)}`;
        }
      }
    });
  }

  // Cerrar búsqueda al hacer clic fuera
  document.addEventListener("click", (e) => {
    if (searchBar && !searchBar.classList.contains("hidden")) {
      const isClickInsideSearch = searchBar.contains(e.target) || 
                                 searchToggle?.contains(e.target);
      if (!isClickInsideSearch) {
        searchBar.classList.add("hidden");
        if (headerSearchInput) {
          headerSearchInput.value = "";
        }
      }
    }
  });

  // Cerrar búsqueda con tecla Escape
  document.addEventListener("keydown", (e) => {
    if (e.key === "Escape" && searchBar && !searchBar.classList.contains("hidden")) {
      searchBar.classList.add("hidden");
      if (headerSearchInput) {
        headerSearchInput.value = "";
      }
    }
  });

  // Funcionalidad de búsqueda móvil
  if (mobileSearchForm && mobileSearchInput) {
    mobileSearchForm.addEventListener("submit", (e) => {
      e.preventDefault();
      const query = mobileSearchInput.value.trim();
      if (query) {
        window.location.href = `/busqueda?q=${encodeURIComponent(query)}`;
      }
    });

    mobileSearchInput.addEventListener("keydown", (e) => {
      if (e.key === "Enter") {
        e.preventDefault();
        const query = mobileSearchInput.value.trim();
        if (query) {
          window.location.href = `/busqueda?q=${encodeURIComponent(query)}`;
        }
      }
    });
  }

  // Inicializar contador del carrito cuando la página cargue
  document.addEventListener('DOMContentLoaded', () => {
    if (window.polyvacCart) {
      window.polyvacCart.updateAllCounters();
    }
  });

  // Escuchar eventos de actualización del carrito
  window.addEventListener('cartUpdated', () => {
    // El counter se actualiza automáticamente via updateAllCounters()
    // Agregar animación al icono del carrito
    animateCartIcon();
  });

  // Función para animar el icono del carrito
  function animateCartIcon() {
    const cartIcon = document.getElementById('cart-icon');
    const cartCounter = document.getElementById('cart-counter');
    
    if (cartIcon && cartCounter) {
      // Remover clases de animación anteriores
      cartIcon.classList.remove('cart-bounce', 'cart-pulse', 'cart-wiggle', 'cart-highlight');
      cartCounter.classList.remove('cart-pulse');
      
      // Forzar reflow para asegurar que las clases se remuevan
      cartIcon.offsetHeight;
      
      // Agregar animaciones
      cartIcon.classList.add('cart-bounce', 'cart-highlight');
      cartCounter.classList.add('cart-pulse');
      
      // Remover las clases después de la animación
      setTimeout(() => {
        cartIcon.classList.remove('cart-bounce', 'cart-highlight');
        cartCounter.classList.remove('cart-pulse');
      }, 800);
    }
  }

  // Funcionalidad del dropdown de categorías
  const categoriesDropdownButton = document.getElementById('categories-dropdown-button');
  const categoriesDropdownMenu = document.getElementById('categories-dropdown-menu');
  const categoriesDropdownIcon = document.getElementById('categories-dropdown-icon');

  if (categoriesDropdownButton && categoriesDropdownMenu && categoriesDropdownIcon) {
    // Toggle dropdown al hacer clic en el botón
    categoriesDropdownButton.addEventListener('click', (e) => {
      e.preventDefault();
      e.stopPropagation();
      
      const isHidden = categoriesDropdownMenu.classList.contains('hidden');
      
      // Cerrar otros dropdowns si los hay
      closeAllDropdowns();
      
      if (isHidden) {
        // Mostrar dropdown
        categoriesDropdownMenu.classList.remove('hidden');
        categoriesDropdownIcon.classList.add('rotate-180');
      } else {
        // Ocultar dropdown
        categoriesDropdownMenu.classList.add('hidden');
        categoriesDropdownIcon.classList.remove('rotate-180');
      }
    });

    // Cerrar dropdown al hacer clic fuera
    document.addEventListener('click', (e) => {
      if (!categoriesDropdownButton.contains(e.target) && !categoriesDropdownMenu.contains(e.target)) {
        categoriesDropdownMenu.classList.add('hidden');
        categoriesDropdownIcon.classList.remove('rotate-180');
      }
    });

    // Cerrar dropdown al presionar Escape
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') {
        categoriesDropdownMenu.classList.add('hidden');
        categoriesDropdownIcon.classList.remove('rotate-180');
      }
    });

    // Cerrar dropdown en dispositivos móviles al hacer clic en un enlace
    const categoryLinks = categoriesDropdownMenu.querySelectorAll('a');
    categoryLinks.forEach(link => {
      link.addEventListener('click', () => {
        categoriesDropdownMenu.classList.add('hidden');
        categoriesDropdownIcon.classList.remove('rotate-180');
      });
    });
  }

  // Función para cerrar todos los dropdowns
  function closeAllDropdowns() {
    const allDropdowns = document.querySelectorAll('[id$="-dropdown-menu"]');
    const allIcons = document.querySelectorAll('[id$="-dropdown-icon"]');
    
    allDropdowns.forEach(dropdown => {
      dropdown.classList.add('hidden');
    });
    
    allIcons.forEach(icon => {
      icon.classList.remove('rotate-180');
    });
  }
</script>

<style>
  /* Animaciones para el icono del carrito */
  @keyframes bounce {
    0%, 20%, 53%, 80%, 100% {
      transform: translate3d(0, 0, 0);
    }
    40%, 43% {
      transform: translate3d(0, -8px, 0);
    }
    70% {
      transform: translate3d(0, -4px, 0);
    }
    90% {
      transform: translate3d(0, -2px, 0);
    }
  }

  @keyframes pulse {
    0% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.15);
    }
    100% {
      transform: scale(1);
    }
  }

  @keyframes wiggle {
    0%, 7% {
      transform: rotateZ(0);
    }
    15% {
      transform: rotateZ(-15deg);
    }
    20% {
      transform: rotateZ(10deg);
    }
    25% {
      transform: rotateZ(-10deg);
    }
    30% {
      transform: rotateZ(6deg);
    }
    35% {
      transform: rotateZ(-4deg);
    }
    40%, 100% {
      transform: rotateZ(0);
    }
  }

  /* Clases para activar las animaciones */
  .cart-bounce {
    animation: bounce 0.6s ease-in-out;
  }

  .cart-pulse {
    animation: pulse 0.4s ease-in-out;
  }

  .cart-wiggle {
    animation: wiggle 0.8s ease-in-out;
  }

  .cart-highlight {
    fill: #3B82F6 !important;
    filter: drop-shadow(0 0 8px rgba(59, 130, 246, 0.4));
    transition: all 0.3s ease;
  }

  /* Estilos para el dropdown de categorías */
  #categories-dropdown-menu {
    max-height: 300px;
    overflow-y: auto;
    transition: all 0.3s ease;
  }

  #categories-dropdown-menu::-webkit-scrollbar {
    width: 4px;
  }

  #categories-dropdown-menu::-webkit-scrollbar-track {
    background: #f1f1f1;
    border-radius: 2px;
  }

  #categories-dropdown-menu::-webkit-scrollbar-thumb {
    background: #c1c1c1;
    border-radius: 2px;
  }

  #categories-dropdown-menu::-webkit-scrollbar-thumb:hover {
    background: #a8a8a8;
  }

  /* Animación para el icono del dropdown */
  #categories-dropdown-icon {
    transition: transform 0.3s ease;
  }

  .rotate-180 {
    transform: rotate(180deg);
  }

  /* Mejorar la apariencia en móviles */
  @media (max-width: 768px) {
    #categories-dropdown-menu {
      position: static;
      width: 100%;
      box-shadow: none;
      border: none;
      border-top: 1px solid #e5e7eb;
      border-radius: 0;
      background: #f9fafb;
      margin-top: 0;
    }

    #categories-dropdown-menu a {
      padding: 12px 24px;
      border-bottom: 1px solid #e5e7eb;
    }

    #categories-dropdown-menu a:last-child {
      border-bottom: none;
    }
  }
</style>
