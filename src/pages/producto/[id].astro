---
import Layout from '../../layouts/Layout.astro';
import { Image, inferRemoteSize } from 'astro:assets';
import { getProductoBySlug, getAllProductosSlugs, getStrapiMedia, getStrapiSVG } from '../../lib/strapi.js';

// Función para generar rutas estáticas
export async function getStaticPaths() {
  try {
    const productosResponse = await getAllProductosSlugs();
    const productos = productosResponse.data || [];
    
    return productos.map((producto) => ({
      params: { id: producto.slug }
    }));
  } catch (error) {
    console.error('Error fetching products for static paths:', error);
    return [];
  }
}

// Obtener el slug de los parámetros
const { id } = Astro.params;

// Fetch datos de Strapi
const productoResponse = await getProductoBySlug(id);

// Verificar que el producto existe
if (!productoResponse.data || productoResponse.data.length === 0) {
  return Astro.redirect('/404');
}

const producto = productoResponse.data[0];

// Obtener contenido SVG del ícono
const iconoSVG = await getStrapiSVG(producto.icono_caracteristica?.url);

// Verificar si la imagen existe antes de obtener dimensiones
let width = 400, height = 400;
if (producto.imagen?.url) {
  try {
    const dimensions = await inferRemoteSize(getStrapiMedia(producto.imagen.url));
    width = dimensions.width;
    height = dimensions.height;
  } catch (error) {
    console.error('Error getting image dimensions:', error);
  }
}

// Determinar el color del triángulo
const triangleClass = `absolute bottom-0 left-0 px-6 py-4 z-10 flex items-center justify-center min-w-[140px]`;
const triangleStyle = `background-color: ${producto.categoria?.Color || '#3B82F6'}; opacity: 0.9; clip-path: polygon(0 0, calc(100% - 20px) 0, 100% 50%, calc(100% - 20px) 100%, 0 100%);`;

const title = producto.nombre;
const description = producto.descripcion;
---
<Layout title={title} description={description}>
  <!-- Hero section con fondo gris claro -->
  <section class="bg-gray-50 py-8">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center">
        <!-- Imagen del producto -->
        <div>
          <div class="relative w-full aspect-square bg-white rounded-xl shadow-lg overflow-hidden flex items-center justify-center border border-gray-200">
            <div class={triangleClass}
              style={triangleStyle}>
              <div class="text-center px-2">
                <span class="text-white text-lg md:text-xl font-light block">Línea</span>
                <span class="text-white text-2xl md:text-xl lg:text-2xl font-bold leading-tight">{producto.nombre}</span>
              </div>
            </div>
            {producto.imagen?.url ? (
              <Image 
                src={getStrapiMedia(producto.imagen.url)} 
                alt={producto.imagen.alternativeText || producto.nombre}
                width={width}
                height={height}
                format="webp"
                class="object-contain w-full h-full p-8" 
              />
            ) : (
              <div class="w-full h-full p-8 flex items-center justify-center text-gray-400">
                Sin imagen disponible
              </div>
            )}
          </div>
        </div>
        
        <!-- Información del producto -->
        <div class="space-y-6">
          <!-- Breadcrumb -->
          <nav class="text-sm text-gray-500">
            <a href="/" class="hover:text-azulprimario transition-colors">Inicio</a>
            <span class="mx-2">/</span>
            <a href={`/categoria/${producto.categoria?.slug}`} class="hover:text-azulprimario transition-colors">{producto.categoria?.nombre}</a>
            <span class="mx-2">/</span>
            <span class="text-azulprimario font-semibold">{producto.nombre}</span>
          </nav>
          
          <!-- Título y descripción -->
          <div>
            <h1 class="text-4xl font-bold text-gray-900 mb-4">{producto.nombre}</h1>
            <p class="text-lg text-gray-600 leading-relaxed">{producto.descripcion}</p>
          </div>
          
          <!-- Característica principal con icono -->
          {producto.caracteristica && (
            <div class="bg-white rounded-lg p-6 shadow-md border border-gray-200">
              <div class="flex items-center mb-3">
                <span class="w-12 h-12 bg-azulprimario rounded-md flex items-center justify-center mr-4">
                  {iconoSVG ? (
                    <Fragment set:html={iconoSVG} />
                  ) : (
                    <div class="w-6 h-6 bg-white rounded"></div>
                  )}
                </span>
                <h3 class="text-xl font-semibold text-azulprimario">{producto.caracteristica}</h3>
              </div>
            </div>
          )}
          
          <!-- Documentación Técnica -->
          <div class="bg-white rounded-lg p-6 shadow-md border border-gray-200">
            <h3 class="text-lg font-semibold text-gray-900 mb-3 flex items-center">
              <svg class="w-5 h-5 mr-2 text-azulprimario" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"/>
              </svg>
              Documentación Técnica
            </h3>
            {producto.pdf?.url ? (
              <a href={getStrapiMedia(producto.pdf.url)} 
                 class="inline-flex items-center px-4 py-2 bg-azulprimario text-white font-medium rounded-lg hover:bg-blue-700 transition-colors" 
                 target="_blank" 
                 rel="noopener">
                <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z" clip-rule="evenodd"/>
                </svg>
                Descargar Ficha Técnica
              </a>
            ) : (
              <p class="text-gray-500">Consulta con nuestro equipo técnico para más información</p>
            )}
          </div>
          
          <!-- Acción de cotización -->
          <div class="bg-gray-50 rounded-lg p-6 border border-gray-200">
            <h3 class="text-lg font-semibold text-gray-900 mb-4">Solicitar Cotización</h3>
            <div class="flex items-center gap-4">
              <div>
                <label for="cantidad" class="block text-sm font-medium text-gray-700 mb-1">Cantidad</label>
                <input type="number" 
                       id="cantidad"
                       min="1" 
                       value="1" 
                       class="w-20 border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-azulprimario focus:border-azulprimario outline-none transition-colors" />
              </div>
              <div class="flex-1">
                <button 
                  id="add-to-cart-btn"
                  data-product-id={producto.id}
                  data-product-slug={producto.slug}
                  data-product-name={producto.nombre}
                  data-product-description={producto.descripcion}
                  data-product-category={producto.categoria?.nombre || 'Sin categoría'}
                  data-product-image={producto.imagen?.url ? getStrapiMedia(producto.imagen.url) : '/placeholder-image.jpg'}
                  class="w-full bg-azulprimario text-white font-semibold px-6 py-3 rounded-lg hover:bg-blue-700 transition-colors shadow-md disabled:opacity-50 disabled:cursor-not-allowed"
                >
                  <span class="add-text">AÑADIR A LA COTIZACIÓN</span>
                  <span class="added-text hidden">✓ YA EN EL COTIZADOR</span>
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Sección de ficha técnica embebida -->
  {producto.pdf?.url && (
    <section class="py-12 bg-white">
      <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="text-center mb-8">
          <h2 class="text-3xl font-bold text-gray-900 mb-4">Ficha Técnica Completa</h2>
          <p class="text-gray-600">Revisa todos los detalles técnicos y especificaciones del producto</p>
        </div>
        
        <div class="bg-gray-50 rounded-xl p-2 shadow-lg border border-gray-200">
          <iframe 
            src={`https://docs.google.com/viewer?url=${encodeURIComponent(getStrapiMedia(producto.pdf.url))}&embedded=true`}
            class="w-full h-[400px] md:h-[700px] rounded-lg border border-gray-300" 
            title="Ficha técnica PDF" 
            allowfullscreen
            frameborder="0"
            style="margin: 0; padding: 0;"
          ></iframe>
        </div>
      </div>
    </section>
  )}
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const addToCartBtn = document.getElementById('add-to-cart-btn');
    
    if (addToCartBtn && window.polyvacCart) {
      const productId = addToCartBtn.dataset.productId;
      
      // Verificar si ya está en el carrito y actualizar UI
      function updateButtonState() {
        const isInCart = window.polyvacCart.isInCart(productId);
        const addText = addToCartBtn.querySelector('.add-text');
        const addedText = addToCartBtn.querySelector('.added-text');
        
        if (isInCart) {
          addText.classList.add('hidden');
          addedText.classList.remove('hidden');
          addToCartBtn.classList.add('bg-gray-500', 'hover:bg-gray-600');
          addToCartBtn.classList.remove('bg-azulprimario', 'hover:bg-blue-700');
          addToCartBtn.disabled = true;
        } else {
          addText.classList.remove('hidden');
          addedText.classList.add('hidden');
          addToCartBtn.classList.remove('bg-gray-500', 'hover:bg-gray-600');
          addToCartBtn.classList.add('bg-azulprimario', 'hover:bg-blue-700');
          addToCartBtn.disabled = false;
        }
      }
      
      // Estado inicial
      updateButtonState();
      
      // Manejar click
      addToCartBtn.addEventListener('click', () => {
        if (window.polyvacCart.isInCart(productId)) {
          return; // Ya está en el carrito
        }

        const productData = {
          id: addToCartBtn.dataset.productId,
          slug: addToCartBtn.dataset.productSlug,
          name: addToCartBtn.dataset.productName,
          description: addToCartBtn.dataset.productDescription,
          category: addToCartBtn.dataset.productCategory,
          image: addToCartBtn.dataset.productImage
        };
        
        window.polyvacCart.addItem(productData);
      });
      
      // Escuchar cambios globales del carrito
      window.polyvacCart.onUpdate(() => {
        updateButtonState();
      });
    }
  });
</script>
