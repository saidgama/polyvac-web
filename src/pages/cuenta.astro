---
import Layout from "../layouts/Layout.astro";

const title = "Mi Cuenta - Industrias Polyvac";
const description = "Inicia sesión o regístrate para acceder a tu cuenta de Industrias Polyvac";
---

<Layout title={title} description={description}>
  
  <main class="bg-gray-50 min-h-screen">
    <div class="container mx-auto px-4 py-8">
      <div class="max-w-md mx-auto">
        
        <!-- Header Section -->
        <div class="text-center mb-8">
          <h1 class="text-3xl font-bold text-gray-900 mb-2">Mi Cuenta</h1>
          <p class="text-gray-600">Accede a tu cuenta o regístrate para una mejor experiencia</p>
        </div>

        <!-- Auth Container -->
        <div class="bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden">
          
          <!-- Tab Navigation -->
          <div class="flex border-b border-gray-200">
            <button 
              id="login-tab" 
              class="flex-1 py-4 px-6 text-center font-medium text-azulprimario border-b-2 border-azulprimario bg-blue-50"
            >
              Iniciar Sesión
            </button>
            <button 
              id="register-tab" 
              class="flex-1 py-4 px-6 text-center font-medium text-gray-500 hover:text-gray-700 transition-colors"
            >
              Registrarse
            </button>
          </div>

          <!-- Login Form -->
          <div id="login-form" class="p-6">
            <form class="space-y-4">
              <div>
                <label for="login-email" class="block text-sm font-medium text-gray-700 mb-1">
                  Email *
                </label>
                <input 
                  type="email" 
                  id="login-email" 
                  name="email" 
                  required
                  class="w-full px-3 py-2 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-azulprimario focus:border-transparent"
                  placeholder="tu.email@ejemplo.com"
                />
              </div>

              <div>
                <label for="login-password" class="block text-sm font-medium text-gray-700 mb-1">
                  Contraseña *
                </label>
                <div class="relative">
                  <input 
                    type="password" 
                    id="login-password" 
                    name="password" 
                    required
                    class="w-full px-3 py-2 pr-10 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-azulprimario focus:border-transparent"
                    placeholder="Tu contraseña"
                  />
                  <button 
                    type="button" 
                    class="absolute inset-y-0 right-0 pr-3 flex items-center toggle-password"
                    data-target="login-password"
                  >
                    <svg class="h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                    </svg>
                  </button>
                </div>
              </div>

              <div class="flex items-center justify-between">
                <label class="flex items-center">
                  <input type="checkbox" class="rounded border-gray-300 text-azulprimario focus:ring-azulprimario focus:ring-offset-0">
                  <span class="ml-2 text-sm text-gray-600">Recordarme</span>
                </label>
                <a href="#" class="text-sm text-azulprimario hover:text-blue-700">
                  ¿Olvidaste tu contraseña?
                </a>
              </div>

              <button 
                type="submit" 
                class="w-full bg-azulprimario text-white py-2.5 px-4 rounded-md font-medium hover:bg-blue-700 transition-colors"
              >
                Iniciar Sesión
              </button>
            </form>
          </div>

          <!-- Register Form -->
          <div id="register-form" class="p-6 hidden">
            <form class="space-y-4">
              <div class="grid grid-cols-2 gap-4">
                <div>
                  <label for="register-firstname" class="block text-sm font-medium text-gray-700 mb-1">
                    Nombre *
                  </label>
                  <input 
                    type="text" 
                    id="register-firstname" 
                    name="firstname" 
                    required
                    class="w-full px-3 py-2 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-azulprimario focus:border-transparent"
                    placeholder="Juan"
                  />
                </div>
                <div>
                  <label for="register-lastname" class="block text-sm font-medium text-gray-700 mb-1">
                    Apellidos *
                  </label>
                  <input 
                    type="text" 
                    id="register-lastname" 
                    name="lastname" 
                    required
                    class="w-full px-3 py-2 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-azulprimario focus:border-transparent"
                    placeholder="Pérez"
                  />
                </div>
              </div>

              <div>
                <label for="register-email" class="block text-sm font-medium text-gray-700 mb-1">
                  Email *
                </label>
                <input 
                  type="email" 
                  id="register-email" 
                  name="email" 
                  required
                  class="w-full px-3 py-2 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-azulprimario focus:border-transparent"
                  placeholder="tu.email@ejemplo.com"
                />
              </div>

              <div>
                <label for="register-phone" class="block text-sm font-medium text-gray-700 mb-1">
                  Teléfono
                </label>
                <input 
                  type="tel" 
                  id="register-phone" 
                  name="phone"
                  class="w-full px-3 py-2 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-azulprimario focus:border-transparent"
                  placeholder="+52 (555) 123-4567"
                />
              </div>

              <div>
                <label for="register-company" class="block text-sm font-medium text-gray-700 mb-1">
                  Empresa
                </label>
                <input 
                  type="text" 
                  id="register-company" 
                  name="company"
                  class="w-full px-3 py-2 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-azulprimario focus:border-transparent"
                  placeholder="Nombre de tu empresa"
                />
              </div>

              <div>
                <label for="register-password" class="block text-sm font-medium text-gray-700 mb-1">
                  Contraseña *
                </label>
                <div class="relative">
                  <input 
                    type="password" 
                    id="register-password" 
                    name="password" 
                    required
                    class="w-full px-3 py-2 pr-10 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-azulprimario focus:border-transparent"
                    placeholder="Mínimo 8 caracteres"
                  />
                  <button 
                    type="button" 
                    class="absolute inset-y-0 right-0 pr-3 flex items-center toggle-password"
                    data-target="register-password"
                  >
                    <svg class="h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                    </svg>
                  </button>
                </div>
                <p class="mt-1 text-xs text-gray-500">
                  Al menos 8 caracteres con una mayúscula y un número
                </p>
              </div>

              <div>
                <label for="register-confirm-password" class="block text-sm font-medium text-gray-700 mb-1">
                  Confirmar Contraseña *
                </label>
                <div class="relative">
                  <input 
                    type="password" 
                    id="register-confirm-password" 
                    name="confirmPassword" 
                    required
                    class="w-full px-3 py-2 pr-10 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-azulprimario focus:border-transparent"
                    placeholder="Confirma tu contraseña"
                  />
                  <button 
                    type="button" 
                    class="absolute inset-y-0 right-0 pr-3 flex items-center toggle-password"
                    data-target="register-confirm-password"
                  >
                    <svg class="h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                    </svg>
                  </button>
                </div>
              </div>

              <button 
                type="submit" 
                class="w-full bg-azulprimario text-white py-2.5 px-4 rounded-md font-medium hover:bg-blue-700 transition-colors"
              >
                Crear Cuenta
              </button>
            </form>
          </div>
        </div>

    

      </div>
    </div>
  </main>

</Layout>

<script>
  class AuthManager {
    constructor() {
      this.init();
    }

    init() {
      this.bindTabSwitching();
      this.bindPasswordToggle();
      this.bindFormSubmissions();
    }

    bindTabSwitching() {
      const loginTab = document.getElementById('login-tab');
      const registerTab = document.getElementById('register-tab');
      const loginForm = document.getElementById('login-form');
      const registerForm = document.getElementById('register-form');

      loginTab?.addEventListener('click', () => {
        this.switchTab('login', loginTab, registerTab, loginForm, registerForm);
      });

      registerTab?.addEventListener('click', () => {
        this.switchTab('register', registerTab, loginTab, registerForm, loginForm);
      });
    }

    switchTab(activeTab, activeButton, inactiveButton, activeForm, inactiveForm) {
      // Update button styles
      activeButton?.classList.add('text-azulprimario', 'border-b-2', 'border-azulprimario', 'bg-blue-50');
      activeButton?.classList.remove('text-gray-500');
      
      inactiveButton?.classList.remove('text-azulprimario', 'border-b-2', 'border-azulprimario', 'bg-blue-50');
      inactiveButton?.classList.add('text-gray-500');

      // Update form visibility
      activeForm?.classList.remove('hidden');
      inactiveForm?.classList.add('hidden');
    }

    bindPasswordToggle() {
      const toggleButtons = document.querySelectorAll('.toggle-password');
      
      toggleButtons.forEach(button => {
        button.addEventListener('click', () => {
          const targetId = button.getAttribute('data-target');
          const targetInput = document.getElementById(targetId);
          
          if (targetInput) {
            const isPassword = targetInput.type === 'password';
            targetInput.type = isPassword ? 'text' : 'password';
            
            // Update icon (you could switch between eye/eye-slash icons here)
            const icon = button.querySelector('svg');
            if (icon) {
              icon.style.opacity = isPassword ? '0.6' : '1';
            }
          }
        });
      });
    }

    bindFormSubmissions() {
      // Login form
      const loginForm = document.querySelector('#login-form form');
      loginForm?.addEventListener('submit', (e) => {
        e.preventDefault();
        this.handleLogin(new FormData(e.target));
      });

      // Register form
      const registerForm = document.querySelector('#register-form form');
      registerForm?.addEventListener('submit', (e) => {
        e.preventDefault();
        this.handleRegister(new FormData(e.target));
      });
    }

    handleLogin(formData) {
      const email = formData.get('email');
      const password = formData.get('password');
      
      // Basic validation
      if (!email || !password) {
        this.showNotification('Por favor completa todos los campos requeridos', 'error');
        return;
      }

      // Simulate login process
      this.showNotification('Iniciando sesión...', 'info');
      
      setTimeout(() => {
        // In a real app, this would make an API call
        this.showNotification('¡Bienvenido de vuelta!', 'success');
        
        // Redirect or update UI
        setTimeout(() => {
          window.location.href = '/';
        }, 1500);
      }, 1000);
    }

    handleRegister(formData) {
      const firstname = formData.get('firstname');
      const lastname = formData.get('lastname');
      const email = formData.get('email');
      const password = formData.get('password');
      const confirmPassword = formData.get('confirmPassword');
      
      // Basic validation
      if (!firstname || !lastname || !email || !password || !confirmPassword) {
        this.showNotification('Por favor completa todos los campos requeridos', 'error');
        return;
      }

      if (password !== confirmPassword) {
        this.showNotification('Las contraseñas no coinciden', 'error');
        return;
      }

      if (password.length < 8) {
        this.showNotification('La contraseña debe tener al menos 8 caracteres', 'error');
        return;
      }

      // Simulate registration process
      this.showNotification('Creando tu cuenta...', 'info');
      
      setTimeout(() => {
        // In a real app, this would make an API call
        this.showNotification('¡Cuenta creada exitosamente!', 'success');
        
        // Switch to login tab
        setTimeout(() => {
          const loginTab = document.getElementById('login-tab');
          const registerTab = document.getElementById('register-tab');
          const loginForm = document.getElementById('login-form');
          const registerForm = document.getElementById('register-form');
          
          this.switchTab('login', loginTab, registerTab, loginForm, registerForm);
          this.showNotification('Ahora puedes iniciar sesión', 'info');
        }, 1500);
      }, 1000);
    }

    showNotification(message, type = 'info') {
      const bgColor = type === 'success' ? 'bg-green-500' : 
                     type === 'error' ? 'bg-red-500' : 'bg-azulprimario';
      
      const toast = document.createElement('div');
      toast.className = `fixed top-4 right-4 ${bgColor} text-white px-6 py-3 rounded-lg shadow-lg z-50 max-w-sm transition-all duration-300 transform translate-x-full`;
      toast.innerHTML = `
        <div class="flex items-center gap-2">
          <svg class="w-5 h-5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
          </svg>
          <span class="text-sm">${message}</span>
        </div>
      `;
      
      document.body.appendChild(toast);
      
      // Animate in
      setTimeout(() => {
        toast.classList.remove('translate-x-full');
      }, 100);
      
      // Animate out and remove
      setTimeout(() => {
        toast.classList.add('translate-x-full');
        setTimeout(() => toast.remove(), 300);
      }, 4000);
    }
  }

  // Initialize auth manager
  new AuthManager();
</script>
</Layout>